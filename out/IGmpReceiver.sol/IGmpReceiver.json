{"abi":[{"type":"function","name":"onGmpReceived","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"network","type":"uint128","internalType":"uint128"},{"name":"source","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onGmpReceived(bytes32,uint128,bytes32,bytes)":"01900937"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"network\",\"type\":\"uint128\"},{\"internalType\":\"bytes32\",\"name\":\"source\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"onGmpReceived\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an GMP compliant contract\",\"kind\":\"dev\",\"methods\":{\"onGmpReceived(bytes32,uint128,bytes32,bytes)\":{\"details\":\"Handles the receipt of a single GMP message. The contract must verify the msg.sender, it must be the Gateway Contract address.\",\"params\":{\"id\":\"The EIP-712 hash of the message payload, used as GMP unique identifier\",\"network\":\"The chain_id of the source chain who send the message\",\"payload\":\"The message payload with no specified format\",\"source\":\"The pubkey/address which sent the GMP message\"},\"returns\":{\"_0\":\"32 byte result which will be stored together with GMP message\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IGmpReceiver.sol\":\"IGmpReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200000},\"remappings\":[\":@analog-gmp-testing/=test/\",\":@analog-gmp/=src/\",\":@frost-evm/=lib/frost-evm/sol/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":frost-evm/=lib/frost-evm/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IGmpReceiver.sol\":{\"keccak256\":\"0x36d8244162c1b3505f8e8a1aaadfc50aa7a677bca3934af2ce9e065e17986121\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f8aaf3dd58ae0561b8a41e4e4cc0f4d9c802d3b6f2e26b41a7e34360e244719\",\"dweb:/ipfs/QmUgraxDP6Djmxk51xdoPN6xKqevCDbxkm2vvAtnRMyi8a\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint128","name":"network","type":"uint128"},{"internalType":"bytes32","name":"source","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"payable","type":"function","name":"onGmpReceived","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"onGmpReceived(bytes32,uint128,bytes32,bytes)":{"details":"Handles the receipt of a single GMP message. The contract must verify the msg.sender, it must be the Gateway Contract address.","params":{"id":"The EIP-712 hash of the message payload, used as GMP unique identifier","network":"The chain_id of the source chain who send the message","payload":"The message payload with no specified format","source":"The pubkey/address which sent the GMP message"},"returns":{"_0":"32 byte result which will be stored together with GMP message"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@analog-gmp-testing/=test/","@analog-gmp/=src/","@frost-evm/=lib/frost-evm/sol/","@solmate/=lib/solmate/src/","ds-test/=lib/solmate/lib/ds-test/src/","forge-std/=lib/forge-std/src/","frost-evm/=lib/frost-evm/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IGmpReceiver.sol":"IGmpReceiver"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/interfaces/IGmpReceiver.sol":{"keccak256":"0x36d8244162c1b3505f8e8a1aaadfc50aa7a677bca3934af2ce9e065e17986121","urls":["bzz-raw://4f8aaf3dd58ae0561b8a41e4e4cc0f4d9c802d3b6f2e26b41a7e34360e244719","dweb:/ipfs/QmUgraxDP6Djmxk51xdoPN6xKqevCDbxkm2vvAtnRMyi8a"],"license":"MIT"}},"version":1},"id":32}